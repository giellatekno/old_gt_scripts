\I\|{a}, \[88].
\I\\{all\_freed}, \[33].
\I\|{b}, \[88], \[89].
\I\\{b\_w}, \[82].
\I\\{back}, 28.
\I\\{bad}, 37, \[40], 69.
\I\\{bad\_count}, \[81], 82, 84, 87, 89.
\I\\{bad\_dot}, \[81], 82, 86.
\I\\{bad\_inc}, \[39].
\I\\{bad\_pat\_count}, \[89].
\I\\{bad\_wt}, 69, \[81], 82, 89, \[92], 93, 94.
\I\\{begin}, 25, 30, 31, 32, 46, 49, 52, 59, 60, 63, 65, 66, 77, 83, 88, 98.
\I\|{c}, \[19], \[24], \[28], \[33].
\I\&{Candidate\_count\_trie}, \[37], \[38].
\I\\{candidates}, \[81], 82, 85, 88, 89.
\I\\{capacity}, 13, 14.
\I\\{cerr}, 13.
\I\\{change\_dots}, \[84], 88, 100.
\I\\{char\_stack}, \[27], 28, 29, 30.
\I\\{cin}, 93, 97, 100.
\I\\{clear}, 27, 28, 31, 35, 49, 52, 60, 63, \[76].
\I\\{collect\_candidates}, 78, \[89], 90.
\I\&{Competitive\_multi\_out\_pat\_manip}, \[57], \[58].
\I\\{competitive\_pattern\_output}, 57, \[60], 83.
\I\\{competitive\_word\_output}, \[59], 60.
\I\&{const\_iterator}, 25, 31, 32, 49, 59, 60, 63, 65, 66, 88.
\I\\{counts}, \[39], \[40].
\I\\{cout}, 4, 14, 36, 43, 77, 87, 88, 89, 90, 93, 94, 97, 100, 101.
\I\\{cstart}, \[28].
\I\.{DEBUG}, 73, 88.
\I\\{def\_val}, \[12].
\I\\{default\_value}, \[11], 12, 13.
\I\\{delete\_hanging}, \[33], \[55], 94.
\I\\{delete\_hanging\_level}, \[33], 34.
\I\\{delete\_pattern}, \[54].
\I\\{delete\_position}, \[53].
\I\\{delete\_values}, \[52], 94.
\I\\{detail}, \[36].
\I\\{dic}, \[97].
\I\\{do\_all}, \[90], \[94], \[101].
\I\\{do\_dictionary}, \[88], 90.
\I\\{do\_word}, 82, \[85], 88.
\I\\{dot\_len}, \[81], 82, 88.
\I\\{dot\_max}, \[81], 82, 83, 85.
\I\\{dot\_min}, \[81], 82, 83, 85.
\I\\{dots}, \[73], 74, 76, 77, 84, 85, 86.
\I\\{dotw}, \[73], 74, 76, 77, 84, 85.
\I\\{dot1}, \[94].
\I\\{dpos}, \[85], 86.
\I\|{e}, \[65], \[74].
\I\\{empty}, 25, 28, 31, 32, \[43].
\I\\{empty\_iter}, \[43].
\I\\{end}, 25, 31, 32, 46, 49, 52, 59, 60, 63, 65, 66, 77, 83, 88, 98.
\I\\{endl}, 13, 14, 36, 43, 77, 87, 88, 89, 90, 94, 97, 100, 101.
\I\\{erase}, 51, 53, 59.
\I\\{err\_hyf}, 73, 82, 84.
\I\&{exception}, 4.
\I\\{ext\_set}, \[63].
\I\\{external}, \[66].
\I\\{fake\_level\_value}, \[100].
\I\\{false}, 19, 23, 24, 28, 33, 48, 51, 71, 74, 89, 94.
\I\\{file}, \[98], \[99].
\I\\{file\_name}, \[100].
\I\\{find}, 59, 65, 83.
\I\\{first}, 39, 40, 43, 46, 51, 52, 53, 59, 83, 88, 98.
\I\\{first\_fit}, 18, \[21], 25, 26.
\I\\{found}, \[22].
\I\\{found\_hyf}, 73, 82, 84.
\I\\{fpos}, \[85].
\I\|{g}, \[89].
\I\\{g\_w}, \[82].
\I\&{Generator}, \[95], \[97].
\I\\{get}, \[71], 88, 98, 100.
\I\\{get\_empty\_iter}, \[43], 46, 54.
\I\\{get\_last\_used\_internal}, \[64].
\I\\{get\_left\_hyphen\_min}, 71, 97.
\I\\{get\_max\_in\_alph}, \[18], 46, \[47], 71, 82, 97.
\I\\{get\_next\_pattern}, \[28], \[40], 46, \[48], 52, 88, 89, 99.
\I\\{get\_pat\_count}, \[18], \[47], 94, 101.
\I\\{get\_q\_max\_thresh}, \[18].
\I\\{get\_right\_hyphen\_min}, 71, 97.
\I\\{get\_trie\_count}, \[18].
\I\\{good}, 37, \[40], 69.
\I\\{good\_count}, \[81], 82, 84, 87, 89.
\I\\{good\_dot}, \[81], 82, 85, 86.
\I\\{good\_inc}, \[39].
\I\\{good\_pat\_count}, \[89].
\I\\{good\_wt}, 69, \[81], 82, 89, \[92], 93, 94.
\I\&{Growing\_array}, \[11], \[12], 17, 73, 94.
\I\\{growing\_array}, 17.
\I\|{h}, \[82], \[93].
\I\\{hard\_insert\_pattern}, \[25], 28, 39, 51, 52, 53, 54.
\I\\{hopeless\_fake\_number}, \[101].
\I\\{hopeless\_hyph\_val}, \[81], 82, 83, 89, \[92], 93, 94.
\I\\{hval}, \[73], 74, 76, 77, 83, 84.
\I\&{Hword}, 68, 71, 72, \[73], \[74], 75, 76.
\I\\{HWord}, 78.
\I\\{hyf\_len}, \[81], 82, 88.
\I\\{hyf\_max}, \[81], 82, 84.
\I\\{hyf\_min}, \[81], 82, 84.
\I\\{hyph\_finish}, 95, \[96], 97, 100, 101.
\I\\{hyph\_level}, \[81], 82, 83, 89, \[92], 93, 94.
\I\\{hyph\_start}, 95, \[96], 97, 98, 100, 101.
\I\\{hyphenate}, \[83], 88, 100.
\I\\{hyphenate\_word\_list}, \[100], 101.
\I\|{i}, \[25], \[30], \[31], \[32], \[35], \[46], \[48], \[49], \[50], \[52], %
\[59], \[60], \[63], \[65], \[66], \[75], \[77], \[83], \[84], \[85], \[88], %
\[98].
\I\\{i\_d\_f\_n}, \[82], \[93].
\I\\{i\_f}, \[100].
\I\\{ic}, \[30].
\I\\{ignore\_bigger}, \[59], \[60].
\I\\{increment\_counts}, \[39], 85.
\I\\{init\_walk\_through}, \[27], 28, 40, 46, \[48], 52, 88, 89, 99.
\I\\{insert}, 35, 43, 49, 51, 52, 53, 59, 63.
\I\\{insert\_pattern}, 46, \[51], 89, 98.
\I\\{internal}, \[65].
\I\\{is\_hyf}, 73, 82, 84.
\I\\{it}, \[30], \[65].
\I\&{iterator}, 30, 43, 45, 46, 48, 49, 50, 52, 59, 77, 83, 88, 98.
\I\|{j}, \[49], \[59], \[83].
\I\|{k}, \[94].
\I\|{l}, \[74], \[82], \[93], \[101].
\I\\{last\_used\_internal}, \[62], 63, 64.
\I\\{left\_hyphen\_min}, 69, \[81], 82, \[92], 93, 94, \[96], 97, 100, 101.
\I\\{level}, \[101].
\I\&{Level}, \[91], \[93].
\I\\{level\_pattern\_count}, \[89], \[90], \[92], 93, 94.
\I\\{level\_value}, \[100].
\I\\{lhm}, \[82], \[93].
\I\\{logical\_addr}, \[13].
\I\\{make\_pair}, 38, 51, 59, 63.
\I\&{map}, 62, 65.
\I\\{max\_i\_a}, \[19], \[38], \[46], \[58].
\I\\{max\_in\_alph}, 16, \[17], 18, 19, 23, 24, 28, 33, 46.
\I\\{min\_in\_alph}, 17, 19, 22, 23, 24, 26, 27, 28, 29, 33, 34.
\I\\{miss\_count}, \[81], 82, 84, 87.
\I\\{more\_this\_level}, \[94].
\I\\{more\_to\_come}, \[89], 90.
\I{MS DOS}, 100.
\I\&{Multi\_output\_pattern\_manipulator}, \[44], \[46], 57, 58.
\I\&{multimap}, 42, 49, 50.
\I\|{n}, \[52].
\I\\{name}, \[96].
\I\\{new\_q\_m\_t}, \[18].
\I\\{no\_hyf}, 73, 74, 82, 84.
\I\\{no\_more}, \[73], 74, 76, 77, 83, 86.
\I\\{not\_found}, \[22].
\I\|{o}, \[25], \[28], \[31], \[32], \[46], \[48], \[49], \[50], \[51], \[52], %
\[53], \[59], \[60], \[83], \[88], \[98], \[99].
\I\\{o\_f}, \[100].
\I\\{oi}, \[59].
\I\\{old}, \[46], \[58].
\I\\{old\_p\_c}, \[94].
\I\\{out}, \[97].
\I\\{out\_i\_z}, \[19].
\I\\{out\_i\_z\_bad}, \[38].
\I\\{out\_i\_z\_good}, \[38].
\I\\{out\_inf\_zero}, 16, \[17], 19, 23, 24, 25, 26, 28, 31, 32, 33, 44, 49.
\I\\{out\_pointers}, \[49], \[59].
\I\\{output\_patterns}, \[99], 101.
\I\\{outputs}, \[45], 46, 51, 52, 53, 54, 56.
\I\&{Outputs\_of\_a\_pattern}, \[42], 43, 46, 48, 49, 50, 51, 52, 53, 59, 60.
\I\&{Outputs\_of\_patterns}, \[43], 45, 48, 50.
\I\|{p}, \[51], \[53], \[93].
\I\\{p\_d}, \[82].
\I\\{p\_l}, \[82].
\I\&{pair}, 37, 40.
\I\&{Pass}, \[80], \[82].
\I\\{pass}, \[94], \[100].
\I\\{pat}, \[82], \[97].
\I\\{pat\_count}, \[17], 18, 19, 25, 36.
\I\\{pat\_dot}, \[81], 82, 83, 85, 89, 90, \[94].
\I\\{pat\_finish}, \[92], 93, 94.
\I\\{pat\_len}, \[81], 82, 83, 85, 90, \[94].
\I\\{pat\_start}, \[92], 93, 94.
\I\\{patlib\_cvs\_id}, \[1].
\I\&{Patlib\_error}, \[4], 13, 98.
\I\\{patlib\_version}, \[1].
\I\\{pattern\_input\_file\_name}, \[96], 97, 98.
\I\\{pattern\_output\_file\_name}, \[96], 97, 99.
\I\\{patterns}, \[81], 82, 83, 88, 89, \[92], 93, 94, \[96], 97, 98, 99, 100,
101.
\I\\{pointer\_stack}, \[27], 28, 29, 30.
\I\\{pop\_back}, 28.
\I\\{print}, \[77].
\I\\{print\_pass\_statistics}, \[87], 88, 100.
\I\\{print\_statistics}, \[14], \[36], \[43], \[56], 88, 89.
\I\.{PTL\_EXC\_H}, \[4].
\I\.{PTL\_GA\_H}, \[10].
\I\.{PTL\_GEN\_H}, \[79].
\I\.{PTL\_HWRD\_H}, \[72].
\I\.{PTL\_MOPM\_H}, \[41].
\I\.{PTL\_STS\_H}, \[61].
\I\.{PTL\_TPM\_H}, \[15].
\I\\{ptl\_vers}, 1.
\I\.{PTL\_VERS\_H}, \[1].
\I\\{push\_back}, 13, 27, 28, 29, 30, 31, 65, 66, 83, 85.
\I\\{put}, 71, 99, 100.
\I\|{q}, \[21].
\I\\{q\_max}, \[17], 21, 22, 24, 25, 26.
\I\\{q\_max\_thresh}, \[17], 18, 19, 21, 22, 36.
\I\\{q\_thr}, \[19], \[38].
\I\\{read\_patterns}, \[98], 101.
\I\\{ret\_val}, \[40], \[48].
\I\\{rhm}, \[82], \[93].
\I\\{right\_hyphen\_min}, 69, \[81], 82, \[92], 93, 94, \[96], 97, 100, 101.
\I\|{s}, \[4], \[21], \[24], \[25], \[32], \[33], \[35], \[59], \[60], \[74], %
\[100].
\I\\{second}, 39, 40, 46, 52, 59, 65, 83, 88, 98.
\I\&{set}, 35, 43, 49, 50, 63.
\I\\{set\_of\_my\_outputs}, \[35].
\I\\{set\_q\_max\_thresh}, \[18].
\I\&{Simple\_translation\_service}, \[62], \[63].
\I\\{size}, 13, 14, 30, 32, 43, 63, 77, 83, 84, 85, 88, 94, 98, 100.
\I\\{spos}, \[85].
\I\\{sprintf}, 100.
\I\&{std}, 4, 11, 12, 13, 14, 42, 43, 73, 74, 75, 76, 77.
\I\&{string}, 4, 100.
\I\\{subw}, \[83], \[85].
\I\\{subwo}, \[83].
\I\|{t}, \[21], \[24], \[25], \[28], \[31], \[32], \[33], \[82].
\I\&{TCandidate\_count\_structure}, 78, 80, 81, 91, 95.
\I\&{TCompetitive\_multi\_out\_pat\_manip}, 78, 80, 81, 82, 91, 92, 93, 95, 96.
\I\&{Tcount\_bad}, 37, 38, 39, 40.
\I\&{Tcount\_good}, 37, 38, 39, 40.
\I\&{Tcount\_pair}, \[37], 38, 39, 40.
\I\&{Tcount\_type}, 78, 80, 81, 88, 89, 90, 91, 92, 95.
\I\&{Texternal}, 62, 63, 65, 66.
\I\\{thresh}, 69, \[81], 82, 89, \[92], 93, 94.
\I\&{THword}, 71, 78, 80, 81, 82, 83, 84, 85, 88, 91, 95, 100.
\I\&{Thyf\_type}, \[73], 74, 81.
\I\&{Tin\_alph}, 16, 17, 19, 25, 28, 31, 32, 37, 38, 39, 40, 44, 45, 46, 48,
49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 80, 83, 85, 88,
89, 91, 95, 98, 99.
\I\&{Tindex}, 11, 13, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60,
73, 75, 77, 78, 80, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96.
\I\&{Tinternal}, \[62], 64, 65, 66.
\I\&{TLevel}, 78, 95, 101.
\I\&{Tmember}, 11, 12, 13, 14.
\I\\{to\_external}, \[62], 63, 66.
\I\\{to\_internal}, \[62], 63, 65.
\I\&{Tout\_alph}, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60.
\I\&{Tout\_information}, 16, 17, 19, 25, 28, 31, 32, 35.
\I\&{Tout\_iter}, \[45], 49, 59.
\I\&{Toutput}, 42, 43.
\I\&{TOutputs\_of\_a\_pattern}, 78, 80, 83, 88, 95, 98, 99.
\I\&{TPass}, 78, 91, 94, 95, 100.
\I\&{TPattern\_input\_file}, 78, 95, 98.
\I\&{TPattern\_output\_file}, 78, 95, 99.
\I\&{Tpm\_pointer}, 16, 17, 18, 19, 21, 24, 25, 27, 28, 30, 31, 32, 33, 35, 37,
38, 40.
\I\&{Tposition}, 42, 43.
\I\\{tra}, \[82], \[93], \[97].
\I\\{translate}, \[81], 82, \[92], 93, 94, \[96], 97, 98, 99, 100, 101.
\I\\{trie\_back}, 16, \[17], 19, 21, 22, 23, 24, 26, 34, 36.
\I\\{trie\_base\_used}, \[17], 19, 21, 22, 23, 24, 33, 36.
\I\\{trie\_bmax}, \[17], 19, 23.
\I\\{trie\_char}, 16, \[17], 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33,
34, 36.
\I\\{trie\_count}, \[17], 18, 19, 25, 26, 34, 36.
\I\\{trie\_link}, 16, \[17], 19, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 36.
\I\\{trie\_max}, \[17], 19, 21, 22, 26, 34, 35, 36.
\I\\{trie\_outp}, 16, \[17], 19, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36.
\I\&{Trie\_pattern\_manipulator}, \[16], \[19], \[20], 37, 38, 40, 43, 45.
\I\\{trie\_root}, 16, 17, 19, 25, 27, 31, 32, 33.
\I\\{trieq\_}, 17, 21, 24.
\I\\{trieq\_back}, \[17], 19, 20, 21, 24, 25, 26.
\I\\{trieq\_char}, \[17], 19, 20, 21, 22, 24, 25, 26.
\I\\{trieq\_link}, \[17], 19, 20, 21, 24, 25, 26.
\I\\{trieq\_outp}, \[17], 19, 20, 21, 24, 25, 26.
\I\\{true}, 7, 19, 21, 28, 33, 48, 51, 71, 83, 89, 94.
\I\\{tstart}, \[28].
\I\&{TTranslate}, 78, 80, 81, 82, 91, 92, 93, 95, 96.
\I\&{Tval\_type}, 73, 74, 78, 80, 81, 82, 91, 92, 93, 95, 96, 100, 101.
\I\&{TWord\_input\_file}, 78, 80, 81, 91, 95, 100.
\I\&{TWord\_output\_file}, 78, 95, 100.
\I\&{Twt\_type}, 73, 74, 78, 80, 82, 91, 95.
\I\|{u}, \[30].
\I\\{unpack}, \[24], 26.
\I\|{v}, \[51], \[52], \[60], \[98], \[99].
\I\\{val\_on\_pat\_dot}, \[83].
\I\\{ve}, \[65], \[66].
\I\\{vect}, \[88].
\I\&{vector}, 11, 12, 13, 14, 17, 25, 27, 28, 30, 31, 32, 39, 40, 46, 48, 49,
50, 51, 52, 53, 54, 59, 60, 65, 66, 73, 74, 75, 76, 77, 83, 85, 88, 89, 98, 99.
\I\\{vi}, \[65], \[66].
\I\|{w}, \[25], \[28], \[31], \[32], \[39], \[40], \[46], \[48], \[49], \[50], %
\[51], \[52], \[53], \[54], \[59], \[60], \[71], \[74], \[83], \[84], \[85], %
\[88], \[89], \[100].
\I\\{what}, \[4].
\I\\{whole\_o}, \[32].
\I\\{with\_erase}, \[51].
\I\\{word}, 52, 73, 83, \[88].
\I\\{word\_input}, \[81], 82, 88.
\I\\{word\_input\_file\_name}, \[92], 93, 94, \[96], 97, 100, 101.
\I\\{word\_last\_output}, \[32], 39, \[50], 51, 53.
\I\\{word\_output}, \[31], 32, \[49], 59.
\I\\{words}, \[45], 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59.

